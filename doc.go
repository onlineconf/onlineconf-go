// Package onlineconf reads CDB configuration files generated by the OnlineConf.
//
// Configuration files ("modules") are mapped in the memory. Configuration values
// can be fetched then by keys ("paths") using several typed GetXXX methods.
//
// The following convention exists for configuration access methods accepting a value path (XXX here represents a type):
//
//	GetXXXErr      - returns a typed value and an error. [ErrNotFound] is returned if there's no such parameter.
//	GetXXXIfExists - returns a typed value and a bool representing whether this parameter exists.
//	                 In the case of an error other than a non-existing parameter, the error message is logged.
//	GetXXX         - returns a typed value. If a path doesn't have a value, the default value specified
//	                 by the second argument is returned. In the case of an error other than a
//	                 non-existing parameter, the error message is logged, and the default value is returned.
//
// Despite the OnlineConf's hierarchical nature, CDB is a simple key-value store, so slash-separated
// "subtrees" are just string prefixes. Note that using other path separators (such as a dot used
// by some legacy projects) isn't supported by [Subtree], [Module.SubscribeSubtree] and [Module.SubscribeChanSubtree].
// [Module] type methods doesn't parse or make hierarchical paths and have no notion of path separator, so
// you can use it with dot-separated paths too.
//
// This library tracks CDB files for changes using the [fsnotify] library. A changed file is reloaded, and new
// values become available to the application instantly. Subscribe* method family can be used to
// receive value change notifications using go channels.
package onlineconf
